#!/bin/bash

set -e
set -u
PACKAGES=""
base_path=~/.pacsave

function help {
    echo $1
    echo "USAGE:"
    echo "   package-saviour ACTION [OPTIONS]"
    echo "   "
    echo "ACTIONS:"
    echo "   #TODO"
    echo "   "
    echo "NOTES:"
    echo "   I'm too lazy to implement lock for this so be careful."
    exit $2
}


function install_package_group {
    path="$1"
    pkgs=`cat $base_path/packages/$path | tr '\n' ' '`
    echo "Installing group <$path>"
    echo "$pkgs"
    yaourt -S $pkgs
}

function package_exists {
    yaourt -Qi $1 > /dev/null
    return $? 
}

function sort_file {
    path=$1
    tmp=`mktemp`
    cat $path | sort > $tmp
    cat $tmp > $path
}


while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -h|--help|help)
        help "Printing help" 0
        ;;
        load)
        ACTION="load"
        ;;
        save|add)
        ACTION="save"
        ;;
        save-all|add-all)
        ACTION="save-all"
        ;;
        rm|del)
        ACTION="del"
        ;;
        list)
        ACTION="list"
        ;;
        *)
        if [[ -z ${ACTION-} ]]; then
            # unknown option
            echo "ERR: Unknown option"
            help
            exit 1
        else
            if [[ -z ${GROUP-} ]]; then
                # first argument is group
                GROUP="$key"
            else
                # rest of the arguments are packages
                if [[ -z ${PACKAGES} ]]; then
                    PACKAGES="$key"
                else
                    PACKAGES="$PACKAGES $key"
                fi
            fi
        fi
        ;;
    esac
    shift # past argument or val
done

if [[ -z ${ACTION-} ]]; then
    help "ERR: No ACTION specified." 1
fi

case $ACTION in
    load)
        if [[ -z ${GROUP-} ]]; then
            GROUP="core"
        fi
        install_package_group $GROUP 
    ;;
    save)
        if package_exists "bash $PACKAGES"; then
            path="$base_path/packages/$GROUP"
            echo $PACKAGES | tr " " "\n" >> "$path"
            sort_file "$path"
            echo "Packages added successfuly."
        else
            help "ERR: Specified package(s) is not installed." 2
        fi
    ;;
    save-all)
        path="$base_path/packages/$GROUP"
        echo `pacsave list` | tr " " "\n" >> "$path"
        sort_file "$path"
        echo "Packages added successfuly."
    ;;
    del)
        if package_exists "bash $PACKAGES"; then
            path="$base_path/packages/$GROUP"
            tmp=`mktemp`
            echo $PACKAGES | tr " " "\n" > $tmp
            while read line; do
                sed -i '/^'$line'$/d' "$path"
            done < $tmp
            echo "Packages deleted successfuly."
        else
            help "ERR: Specified package(s) is not installed." 2
        fi
    ;;
    list)
        if [[ ! -z ${GROUP-} ]] ; then
            for g in $GROUP; do
                echo "GROUP: $g"
                cat "$base_path/packages/$g"
            done
        else
            tmp_installed=`mktemp`
            tmp_saved=`mktemp`
            yaourt -Q | cut -d' ' -f1 | cut -d'/' -f2 | sort > $tmp_installed
            groups="$base_path/packages/"*
            cat $groups | sort > $tmp_saved
            comm $tmp_installed $tmp_saved -23
        fi
    ;;
    *)
            # unknown option
    ;;
esac

